/*
 * API
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import java.math.BigDecimal;
import io.swagger.client.model.Body;
import io.swagger.client.model.Body1;
import io.swagger.client.model.Body10;
import io.swagger.client.model.Body11;
import io.swagger.client.model.Body2;
import io.swagger.client.model.Body3;
import io.swagger.client.model.Body4;
import io.swagger.client.model.Body5;
import io.swagger.client.model.Body6;
import io.swagger.client.model.Body7;
import io.swagger.client.model.Body8;
import io.swagger.client.model.Body9;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse20010;
import io.swagger.client.model.InlineResponse20011;
import io.swagger.client.model.InlineResponse20012;
import io.swagger.client.model.InlineResponse20013;
import io.swagger.client.model.InlineResponse20014;
import io.swagger.client.model.InlineResponse20015;
import io.swagger.client.model.InlineResponse20016;
import io.swagger.client.model.InlineResponse20017;
import io.swagger.client.model.InlineResponse20018;
import io.swagger.client.model.InlineResponse20019;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse20020;
import io.swagger.client.model.InlineResponse20021;
import io.swagger.client.model.InlineResponse20022;
import io.swagger.client.model.InlineResponse20023;
import io.swagger.client.model.InlineResponse20024;
import io.swagger.client.model.InlineResponse20025;
import io.swagger.client.model.InlineResponse20026;
import io.swagger.client.model.InlineResponse20027;
import io.swagger.client.model.InlineResponse20028;
import io.swagger.client.model.InlineResponse20029;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse20030;
import io.swagger.client.model.InlineResponse20031;
import io.swagger.client.model.InlineResponse20032;
import io.swagger.client.model.InlineResponse20033;
import io.swagger.client.model.InlineResponse20034;
import io.swagger.client.model.InlineResponse20035;
import io.swagger.client.model.InlineResponse20036;
import io.swagger.client.model.InlineResponse20037;
import io.swagger.client.model.InlineResponse20038;
import io.swagger.client.model.InlineResponse20039;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse20040;
import io.swagger.client.model.InlineResponse20041;
import io.swagger.client.model.InlineResponse20042;
import io.swagger.client.model.InlineResponse20043;
import io.swagger.client.model.InlineResponse20044;
import io.swagger.client.model.InlineResponse20045;
import io.swagger.client.model.InlineResponse20046;
import io.swagger.client.model.InlineResponse20047;
import io.swagger.client.model.InlineResponse20048;
import io.swagger.client.model.InlineResponse20049;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse20050;
import io.swagger.client.model.InlineResponse20051;
import io.swagger.client.model.InlineResponse20052;
import io.swagger.client.model.InlineResponse20053;
import io.swagger.client.model.InlineResponse20054;
import io.swagger.client.model.InlineResponse20055;
import io.swagger.client.model.InlineResponse20056;
import io.swagger.client.model.InlineResponse20057;
import io.swagger.client.model.InlineResponse20058;
import io.swagger.client.model.InlineResponse20059;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse20060;
import io.swagger.client.model.InlineResponse20061;
import io.swagger.client.model.InlineResponse20062;
import io.swagger.client.model.InlineResponse20063;
import io.swagger.client.model.InlineResponse20064;
import io.swagger.client.model.InlineResponse20065;
import io.swagger.client.model.InlineResponse20066;
import io.swagger.client.model.InlineResponse20067;
import io.swagger.client.model.InlineResponse20068;
import io.swagger.client.model.InlineResponse20069;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse20070;
import io.swagger.client.model.InlineResponse20071;
import io.swagger.client.model.InlineResponse20072;
import io.swagger.client.model.InlineResponse20073;
import io.swagger.client.model.InlineResponse20074;
import io.swagger.client.model.InlineResponse20075;
import io.swagger.client.model.InlineResponse20076;
import io.swagger.client.model.InlineResponse20077;
import io.swagger.client.model.InlineResponse20078;
import io.swagger.client.model.InlineResponse20079;
import io.swagger.client.model.InlineResponse2008;
import io.swagger.client.model.InlineResponse20080;
import io.swagger.client.model.InlineResponse20081;
import io.swagger.client.model.InlineResponse20082;
import io.swagger.client.model.InlineResponse20083;
import io.swagger.client.model.InlineResponse20084;
import io.swagger.client.model.InlineResponse20085;
import io.swagger.client.model.InlineResponse20086;
import io.swagger.client.model.InlineResponse20087;
import io.swagger.client.model.InlineResponse20088;
import io.swagger.client.model.InlineResponse20089;
import io.swagger.client.model.InlineResponse2009;
import io.swagger.client.model.InlineResponse20090;
import io.swagger.client.model.InlineResponse2009Results;
import io.swagger.client.model.InlineResponse201;
import io.swagger.client.model.InlineResponse401;
import io.swagger.client.model.InlineResponse4011;
import org.threeten.bp.LocalDate;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Delete Session
     *
     * If you would like to delete (or \&quot;logout\&quot;) from a session, call this method with a valid session ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void dELETEAuthenticationSessionTest() throws Exception {
        Body5 body = null;
        InlineResponse20050 response = api.dELETEAuthenticationSession(body);

        // TODO: test validations
    }
    
    /**
     * Delete List
     *
     * Delete a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void dELETEListListIdTest() throws Exception {
        String listId = null;
        String sessionId = null;
        InlineResponse4011 response = api.dELETEListListId(listId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Delete Rating
     *
     * Remove your rating for a movie.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void dELETEMovieMovieIdRatingTest() throws Exception {
        Integer movieId = null;
        String contentType = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.dELETEMovieMovieIdRating(movieId, contentType, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Delete Rating
     *
     * Remove your rating for a TV show.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void dELETETvTvIdRatingTest() throws Exception {
        Integer tvId = null;
        String contentType = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.dELETETvTvIdRating(tvId, contentType, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Delete Rating
     *
     * Remove your rating for a TV episode.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void dELETETvTvIdSeasonSeasonNumberEpisodeEpisodeNumberRatingTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        String contentType = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.dELETETvTvIdSeasonSeasonNumberEpisodeEpisodeNumberRating(tvId, seasonNumber, episodeNumber, contentType, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get your account details.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountTest() throws Exception {
        String sessionId = null;
        InlineResponse20090 response = api.gETAccount(sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Favorite Movies
     *
     * Get the list of your favorite movies.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdFavoriteMoviesTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse2002 response = api.gETAccountAccountIdFavoriteMovies(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Favorite TV Shows
     *
     * Get the list of your favorite TV shows.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdFavoriteTvTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse20011 response = api.gETAccountAccountIdFavoriteTv(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Created Lists
     *
     * Get all of the lists created by an account. Will invlude private lists if you are the owner.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdListsTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        String apiKey = null;
        InlineResponse20088 response = api.gETAccountAccountIdLists(accountId, sessionId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Rated Movies
     *
     * Get a list of all the movies you have rated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdRatedMoviesTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse20026 response = api.gETAccountAccountIdRatedMovies(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Rated TV Shows
     *
     * Get a list of all the TV shows you have rated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdRatedTvTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse20062 response = api.gETAccountAccountIdRatedTv(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Rated TV Episodes
     *
     * Get a list of all the TV episodes you have rated.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdRatedTvEpisodesTest() throws Exception {
        String accountId = null;
        String sessionId = null;
        InlineResponse20081 response = api.gETAccountAccountIdRatedTvEpisodes(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Movie Watchlist
     *
     * Get a list of all the movies you have added to your watchlist.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdWatchlistMoviesTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse2002 response = api.gETAccountAccountIdWatchlistMovies(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get TV Show Watchlist
     *
     * Get a list of all the TV shows you have added to your watchlist.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAccountAccountIdWatchlistTvTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        InlineResponse20011 response = api.gETAccountAccountIdWatchlistTv(accountId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Create Guest Session
     *
     * This method will let you create a new guest session. Guest sessions are a type of session that will let a user rate movies and TV shows but not require them to have a TMDB user account. More information about user authentication can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ).  Please note, you should only generate a single guest session per user (or device) as you will be able to attach the ratings to a TMDB user account in the future. There is also IP limits in place so you should always make sure it&#39;s the end user doing the guest session actions.  If a guest session is not used for the first time within 24 hours, it will be automatically deleted.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAuthenticationGuestSessionNewTest() throws Exception {
        InlineResponse20084 response = api.gETAuthenticationGuestSessionNew();

        // TODO: test validations
    }
    
    /**
     * Create Request Token
     *
     * Create a temporary request token that can be used to validate a TMDB user login. More details about how this works can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETAuthenticationTokenNewTest() throws Exception {
        InlineResponse20025 response = api.gETAuthenticationTokenNew();

        // TODO: test validations
    }
    
    /**
     * Get Movie Certifications
     *
     * Get an up to date list of the officially supported movie certifications on TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCertificationMovieListTest() throws Exception {
        InlineResponse20054 response = api.gETCertificationMovieList();

        // TODO: test validations
    }
    
    /**
     * Get TV Certifications
     *
     * Get an up to date list of the officially supported TV show certifications on TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCertificationTvListTest() throws Exception {
        InlineResponse20049 response = api.gETCertificationTvList();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get collection details by id.  #### Recent Changes  | **Date** | **Change** | | - | - | | March 16, 2018 | Added the [translations](#endpoint:bhcsxEgRvyk3N7FnD) method. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCollectionCollectionIdTest() throws Exception {
        Integer collectionId = null;
        InlineResponse20015 response = api.gETCollectionCollectionId(collectionId);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images for a collection by id.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCollectionCollectionIdImagesTest() throws Exception {
        Integer collectionId = null;
        InlineResponse20045 response = api.gETCollectionCollectionIdImages(collectionId);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get the list translations for a collection by id.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCollectionCollectionIdTranslationsTest() throws Exception {
        Integer collectionId = null;
        InlineResponse20013 response = api.gETCollectionCollectionIdTranslations(collectionId);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get a companies details by id.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCompanyCompanyIdTest() throws Exception {
        Integer companyId = null;
        InlineResponse2008 response = api.gETCompanyCompanyId(companyId);

        // TODO: test validations
    }
    
    /**
     * Get Alternative Names
     *
     * Get the alternative names of a company.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCompanyCompanyIdAlternativeNamesTest() throws Exception {
        Integer companyId = null;
        InlineResponse20058 response = api.gETCompanyCompanyIdAlternativeNames(companyId);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get a companies logos by id.  There are two image formats that are supported for companies, PNG&#39;s and SVG&#39;s. You can see which type the original file is by looking at the &#x60;file_type&#x60; field. We prefer SVG&#39;s as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.  For more information about how SVG&#39;s and PNG&#39;s can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCompanyCompanyIdImagesTest() throws Exception {
        Integer companyId = null;
        InlineResponse20023 response = api.gETCompanyCompanyIdImages(companyId);

        // TODO: test validations
    }
    
    /**
     * Get API Configuration
     *
     * Get the system wide configuration information. Some elements of the API require some knowledge of this configuration data. The purpose of this is to try and keep the actual API responses as light as possible. It is recommended you cache this data within your application and check for updates every few days.  This method currently holds the data relevant to building image URLs as well as the change key map.  To build an image URL, you will need 3 pieces of data. The &#x60;base_url&#x60;, &#x60;size&#x60; and &#x60;file_path&#x60;. Simply combine them all and you will have a fully qualified URL. Here’s an example URL:      https://image.tmdb.org/t/p/w500/8uO0gUM8aNqYLs1OsTBQiXu0fEv.jpg  The configuration method also contains the list of change keys which can be useful if you are building an app that consumes data from the change feed.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationTest() throws Exception {
        String apiKey = null;
        InlineResponse20065 response = api.gETConfiguration(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Countries
     *
     * Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationCountriesTest() throws Exception {
        String apiKey = null;
        List<InlineResponse20053> response = api.gETConfigurationCountries(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Jobs
     *
     * Get a list of the jobs and departments we use on TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationJobsTest() throws Exception {
        String apiKey = null;
        List<InlineResponse20074> response = api.gETConfigurationJobs(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Languages
     *
     * Get the list of languages (ISO 639-1 tags) used throughout TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationLanguagesTest() throws Exception {
        String apiKey = null;
        List<InlineResponse20076> response = api.gETConfigurationLanguages(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Primary Translations
     *
     * Get a list of the _officially_ supported translations on TMDB.  While it&#39;s technically possible to add a translation in any one of the [languages](#endpoint:tem8QfFFyAfWodrCv) we have added to TMDB (we don&#39;t restrict content), the ones listed in this method are the ones we also support for localizing the website with which means they are what we refer to as the \&quot;primary\&quot; translations.  These are all specified as [IETF tags](https://en.wikipedia.org/wiki/IETF_language_tag) to identify the languages we use on TMDB. There is one exception which is image languages. They are currently only designated by a ISO-639-1 tag. This is a planned upgrade for the future.  We&#39;re always open to adding more if you think one should be added. You can ask about getting a new primary translation added by posting on [the forums](https://www.themoviedb.org/talk/category/5047951f760ee3318900009a).  One more thing to mention, these are the translations that map to our website translation project. You can view and contribute to that project [here](https://www.localeapp.com/projects/8267).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationPrimaryTranslationsTest() throws Exception {
        String apiKey = null;
        List<String> response = api.gETConfigurationPrimaryTranslations(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Timezones
     *
     * Get the list of timezones used throughout TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETConfigurationTimezonesTest() throws Exception {
        String apiKey = null;
        List<InlineResponse20072> response = api.gETConfigurationTimezones(apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get a movie or TV credit details by id.  #### Recent Changes  | **Date** | **Change** | | - | - | | July 13, 2018 | Movie credits are now supported. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETCreditCreditIdTest() throws Exception {
        String creditId = null;
        InlineResponse20044 response = api.gETCreditCreditId(creditId);

        // TODO: test validations
    }
    
    /**
     * Movie Discover
     *
     * Discover movies by different types of data like average rating, number of votes, genres and certifications. You can get a valid list of certifications from the [certifications list](#endpoint:faFKjuKG2HnwexAWM) method.  Discover also supports a nice list of sort options. See below for all of the available options.  Please note, when using &#x60;certification&#x60; \\ &#x60;certification.lte&#x60; you must also specify &#x60;certification_country&#x60;. These two parameters work together in order to filter the results. You can only filter results with the countries we have added to our [certifications list](#endpoint:faFKjuKG2HnwexAWM).  If you specify the &#x60;region&#x60; parameter, the regional release date will be used instead of the primary release date. The date returned will be the first date based on your query (ie. if a &#x60;with_release_type&#x60; is specified). It&#39;s important to note the order of the release types that are used. Specifying \&quot;2|3\&quot; would return the limited theatrical release date as opposed to \&quot;3|2\&quot; which would return the theatrical date.  Also note that a number of filters support being comma (&#x60;,&#x60;) or pipe (&#x60;|&#x60;) separated. Comma&#39;s are treated like an &#x60;AND&#x60; and query while pipe&#39;s are an &#x60;OR&#x60;.   Some examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).  #### Recent Changes  | **Date** | **Change** | | - | - | | November 18, 2021 | A new &#x60;without_companies&#x60; filter is available.| | April 13, 2021 | A new &#x60;with_watch_monetization_types&#x60; filter is available to use with &#x60;watch_region&#x60;.| | January 2, 2021 | A new set of filters are available for watch provider filtering. Check out &#x60;with_watch_providers&#x60; and &#x60;watch_region&#x60;.|
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETDiscoverMovieTest() throws Exception {
        String sortBy = null;
        String certificationCountry = null;
        String certification = null;
        String certificationLte = null;
        String certificationGte = null;
        Boolean includeAdult = null;
        Boolean includeVideo = null;
        String language = null;
        Integer page = null;
        Integer primaryReleaseYear = null;
        LocalDate primaryReleaseDateGte = null;
        LocalDate primaryReleaseDateLte = null;
        LocalDate releaseDateGte = null;
        LocalDate releaseDateLte = null;
        Integer withReleaseType = null;
        Integer year = null;
        Integer voteCountGte = null;
        Integer voteCountLte = null;
        BigDecimal voteAverageGte = null;
        BigDecimal voteAverageLte = null;
        String withCast = null;
        String withCrew = null;
        String withPeople = null;
        String withCompanies = null;
        String withGenres = null;
        String withoutGenres = null;
        String withKeywords = null;
        String withoutKeywords = null;
        Integer withRuntimeGte = null;
        Integer withRuntimeLte = null;
        String withOriginalLanguage = null;
        String withWatchProviders = null;
        String watchRegion = null;
        String withWatchMonetizationTypes = null;
        String withoutCompanies = null;
        InlineResponse200 response = api.gETDiscoverMovie(sortBy, certificationCountry, certification, certificationLte, certificationGte, includeAdult, includeVideo, language, page, primaryReleaseYear, primaryReleaseDateGte, primaryReleaseDateLte, releaseDateGte, releaseDateLte, withReleaseType, year, voteCountGte, voteCountLte, voteAverageGte, voteAverageLte, withCast, withCrew, withPeople, withCompanies, withGenres, withoutGenres, withKeywords, withoutKeywords, withRuntimeGte, withRuntimeLte, withOriginalLanguage, withWatchProviders, watchRegion, withWatchMonetizationTypes, withoutCompanies);

        // TODO: test validations
    }
    
    /**
     * TV Discover
     *
     * Discover TV shows by different types of data like average rating, number of votes, genres, the network they aired on and air dates.  Discover also supports a nice list of sort options. See below for all of the available options.  Also note that a number of filters support being comma (&#x60;,&#x60;) or pipe (&#x60;|&#x60;) separated. Comma&#39;s are treated like an &#x60;AND&#x60; and query while pipe&#39;s are an &#x60;OR&#x60;.   Some examples of what can be done with discover can be found [here](https://www.themoviedb.org/documentation/api/discover).  #### Recent Changes  | **Date** | **Change** | | - | - | | November 18, 2021 | Some new filters are available: &#x60;with_status&#x60;, &#x60;with_type&#x60; and &#x60;without_companies&#x60;.| | April 13, 2021 | A new &#x60;with_watch_monetization_types&#x60; filter is available to use with &#x60;watch_region&#x60;.| | January 2, 2021 | A new set of filters are available for watch provider filtering. Check out &#x60;with_watch_providers&#x60; and &#x60;watch_region&#x60;.|
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETDiscoverTvTest() throws Exception {
        String sortBy = null;
        LocalDate airDateGte = null;
        LocalDate airDateLte = null;
        LocalDate firstAirDateGte = null;
        LocalDate firstAirDateLte = null;
        Integer firstAirDateYear = null;
        String language = null;
        Integer page = null;
        String timezone = null;
        BigDecimal voteAverageGte = null;
        Integer voteCountGte = null;
        String withGenres = null;
        String withNetworks = null;
        String withoutGenres = null;
        Integer withRuntimeGte = null;
        Integer withRuntimeLte = null;
        Boolean includeNullFirstAirDates = null;
        String withOriginalLanguage = null;
        String withoutKeywords = null;
        Boolean screenedTheatrically = null;
        String withCompanies = null;
        String withKeywords = null;
        String withWatchProviders = null;
        String watchRegion = null;
        String withWatchMonetizationTypes = null;
        String withStatus = null;
        String withType = null;
        String withoutCompanies = null;
        InlineResponse20030 response = api.gETDiscoverTv(sortBy, airDateGte, airDateLte, firstAirDateGte, firstAirDateLte, firstAirDateYear, language, page, timezone, voteAverageGte, voteCountGte, withGenres, withNetworks, withoutGenres, withRuntimeGte, withRuntimeLte, includeNullFirstAirDates, withOriginalLanguage, withoutKeywords, screenedTheatrically, withCompanies, withKeywords, withWatchProviders, watchRegion, withWatchMonetizationTypes, withStatus, withType, withoutCompanies);

        // TODO: test validations
    }
    
    /**
     * Find by ID
     *
     * The find method makes it easy to search for objects in our database by an external id.  This method will search all objects (movies, TV shows and people) and return the results in a single response.  The supported external sources for each object are as follows.  #### Media Databases  |              | Movies | TV Shows | TV Seasons | TV Episodes | People | | ------------ | ------ | -------- | ---------- | ----------- | ------ | | IMDb ID      | ✓      | ✓        | ✗          | ✓           | ✓      | | TVDB ID      | ✗      | ✓        | ✓          | ✓           | ✗      | | Freebase MID*| ✗      | ✓        | ✓          | ✓           | ✓      | | Freebase ID* | ✗      | ✓        | ✓          | ✓           | ✓      | | TVRage ID*   | ✗      | ✓        | ✓          | ✓           | ✓      |  #### Social IDs  |              | Movies | TV Shows | TV Seasons | TV Episodes | People | | ------------ | ------ | -------- | ---------- | ----------- | ------ | | Facebook     | ✓      | ✓        | ✗          | ✗           | ✓      | | Instagram    | ✓      | ✓        | ✗          | ✗           | ✓      | | Twitter      | ✓      | ✓        | ✗          | ✗           | ✓      |  *Defunct or no longer available as a service.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETFindExternalIdTest() throws Exception {
        String externalId = null;
        String externalSource = null;
        InlineResponse20032 response = api.gETFindExternalId(externalId, externalSource);

        // TODO: test validations
    }
    
    /**
     * Get Movie List
     *
     * Get the list of official genres for movies.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETGenreMovieListTest() throws Exception {
        String language = null;
        InlineResponse20036 response = api.gETGenreMovieList(language);

        // TODO: test validations
    }
    
    /**
     * Get TV List
     *
     * Get the list of official genres for TV shows.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETGenreTvListTest() throws Exception {
        InlineResponse20036 response = api.gETGenreTvList();

        // TODO: test validations
    }
    
    /**
     * Get Rated Movies
     *
     * Get the rated movies for a guest session.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETGuestSessionGuestSessionIdRatedMoviesTest() throws Exception {
        String guestSessionId = null;
        InlineResponse20026 response = api.gETGuestSessionGuestSessionIdRatedMovies(guestSessionId);

        // TODO: test validations
    }
    
    /**
     * Get Rated TV Shows
     *
     * Get the rated TV shows for a guest session.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETGuestSessionGuestSessionIdRatedTvTest() throws Exception {
        String guestSessionId = null;
        InlineResponse20062 response = api.gETGuestSessionGuestSessionIdRatedTv(guestSessionId);

        // TODO: test validations
    }
    
    /**
     * Get Rated TV Episodes
     *
     * Get the rated TV episodes for a guest session.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETGuestSessionGuestSessionIdRatedTvEpisodesTest() throws Exception {
        String guestSessionId = null;
        InlineResponse20018 response = api.gETGuestSessionGuestSessionIdRatedTvEpisodes(guestSessionId);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETKeywordKeywordIdTest() throws Exception {
        Integer keywordId = null;
        InlineResponse2009Results response = api.gETKeywordKeywordId(keywordId);

        // TODO: test validations
    }
    
    /**
     * Get Movies
     *
     * Get the movies that belong to a keyword.  We **highly recommend** using [movie discover](#endpoint:p5NyoR7dM842S8G9j) instead of this method as it is much more flexible.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETKeywordKeywordIdMoviesTest() throws Exception {
        Integer keywordId = null;
        InlineResponse20040 response = api.gETKeywordKeywordIdMovies(keywordId);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the details of a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETListListIdTest() throws Exception {
        String listId = null;
        InlineResponse20031 response = api.gETListListId(listId);

        // TODO: test validations
    }
    
    /**
     * Check Item Status
     *
     * You can use this method to check if a movie has already been added to the list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETListListIdItemStatusTest() throws Exception {
        String listId = null;
        Integer movieId = null;
        InlineResponse20071 response = api.gETListListIdItemStatus(listId, movieId);

        // TODO: test validations
    }
    
    /**
     * Get Movie Change List
     *
     * Get  a list of all of the movie ids that have been changed in the past 24 hours.  You can query it for up to 14 days worth of changed IDs at a time with the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters. 100 items are returned per page.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieChangesTest() throws Exception {
        InlineResponse20039 response = api.gETMovieChanges();

        // TODO: test validations
    }
    
    /**
     * Get Latest
     *
     * Get the most newly created movie. This is a live response and will continuously change.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieLatestTest() throws Exception {
        InlineResponse20077 response = api.gETMovieLatest();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the primary information about a movie.  Supports &#x60;append_to_response&#x60;. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).  #### Recent Changes  | **Date** | **Change** | | - | - | | November 20, 2020 | A &#x60;watch/providers&#x60; method has been added to show what providers (eg. streaming) are available and where.|
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdTest() throws Exception {
        Integer movieId = null;
        InlineResponse20043 response = api.gETMovieMovieId(movieId);

        // TODO: test validations
    }
    
    /**
     * Get Account States
     *
     * Grab the following account states for a session:  - Movie rating - If it belongs to your watchlist - If it belongs to your favourite list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdAccountStatesTest() throws Exception {
        Integer movieId = null;
        String sessionId = null;
        String guestSessionId = null;
        InlineResponse20048 response = api.gETMovieMovieIdAccountStates(movieId, sessionId, guestSessionId);

        // TODO: test validations
    }
    
    /**
     * Get Alternative Titles
     *
     * Get all of the alternative titles for a movie.  #### Recent Changes  | **Date** | **Change** | | - | - | | March 16, 2018 | Added the &#x60;type&#x60; field. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdAlternativeTitlesTest() throws Exception {
        Integer movieId = null;
        String country = null;
        InlineResponse20078 response = api.gETMovieMovieIdAlternativeTitles(movieId, country);

        // TODO: test validations
    }
    
    /**
     * Get Changes
     *
     * Get the changes for a movie. By default only the last 24 hours are returned.  You can query up to 14 days in a single query by using the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdChangesTest() throws Exception {
        Integer movieId = null;
        InlineResponse20068 response = api.gETMovieMovieIdChanges(movieId);

        // TODO: test validations
    }
    
    /**
     * Get Credits
     *
     * Get the cast and crew for a movie.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdCreditsTest() throws Exception {
        Integer movieId = null;
        InlineResponse20038 response = api.gETMovieMovieIdCredits(movieId);

        // TODO: test validations
    }
    
    /**
     * Get External IDs
     *
     * Get the external ids for a movie. We currently support the following external sources.  | **Media Databases** | **Social IDs** | | ------------------- | -------------- | | IMDb ID             | Facebook       | |                     | Instagram      | |                     | Twitter        |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdExternalIdsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20012 response = api.gETMovieMovieIdExternalIds(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images that belong to a movie.  Querying images with a &#x60;language&#x60; parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the &#x60;include_image_language&#x60; parameter. This should be a comma seperated value like so: &#x60;include_image_language&#x3D;en,null&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdImagesTest() throws Exception {
        Integer movieId = null;
        String includeImageLanguage = null;
        InlineResponse2004 response = api.gETMovieMovieIdImages(movieId, includeImageLanguage);

        // TODO: test validations
    }
    
    /**
     * Get Keywords
     *
     * Get the keywords that have been added to a movie.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdKeywordsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20056 response = api.gETMovieMovieIdKeywords(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Lists
     *
     * Get a list of lists that this movie belongs to.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdListsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse2007 response = api.gETMovieMovieIdLists(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Recommendations
     *
     * Get a list of recommended movies for a movie.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdRecommendationsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse2002 response = api.gETMovieMovieIdRecommendations(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Release Dates
     *
     * Get the release date along with the certification for a movie.  Release dates support different types:  1. Premiere 2. Theatrical (limited) 3. Theatrical 4. Digital 5. Physical 6. TV
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdReleaseDatesTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20075 response = api.gETMovieMovieIdReleaseDates(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Reviews
     *
     * Get the user reviews for a movie.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdReviewsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20042 response = api.gETMovieMovieIdReviews(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Similar Movies
     *
     * Get a list of similar movies. This is **not** the same as the \&quot;Recommendation\&quot; system you see on the website.  These items are assembled by looking at keywords and genres.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdSimilarTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse2002 response = api.gETMovieMovieIdSimilar(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get a list of translations that have been created for a movie.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdTranslationsTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20013 response = api.gETMovieMovieIdTranslations(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Videos
     *
     * Get the videos that have been added to a movie.  #### Recent Changes  | **Date** | **Change** | | - | - | | July 28, 2021 | A new &#x60;include_video_language&#x60; filter is now available. You can use this filter the same way you use &#x60;include_image_language&#x60; on image calls. We also added two new fields, &#x60;official&#x60; and &#x60;published_at&#x60; to the video response. | | March 23, 2019 | Vimeo was added as a video source. | | March 20, 2019 | \&quot;Behind the Scenes\&quot; and \&quot;Bloopers\&quot; were added as valid video types. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdVideosTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20022 response = api.gETMovieMovieIdVideos(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Watch Providers
     *
     * Powered by our partnership with JustWatch, you can query this method to get a list of the availabilities per country by provider.  This is **not** going to return full deep links, but rather, it&#39;s just enough information to display what&#39;s available where.  You can link to the provided TMDB URL to help support TMDB and provide the actual deep links to the content.  **Please note**: In order to use this data **you must** attribute the source of the data as JustWatch. If we find any usage not complying with these terms we will revoke access to the API.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieMovieIdWatchProvidersTest() throws Exception {
        Integer movieId = null;
        String apiKey = null;
        InlineResponse20087 response = api.gETMovieMovieIdWatchProviders(movieId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Get Now Playing
     *
     * Get a list of movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.  You can optionally specify a &#x60;region&#x60; prameter which will narrow the search to only look for theatrical release dates within the specified country.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieNowPlayingTest() throws Exception {
        InlineResponse20057 response = api.gETMovieNowPlaying();

        // TODO: test validations
    }
    
    /**
     * Get Popular
     *
     * Get a list of the current popular movies on TMDB. This list updates daily.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMoviePopularTest() throws Exception {
        InlineResponse200 response = api.gETMoviePopular();

        // TODO: test validations
    }
    
    /**
     * Get Top Rated
     *
     * Get the top rated movies on TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieTopRatedTest() throws Exception {
        InlineResponse200 response = api.gETMovieTopRated();

        // TODO: test validations
    }
    
    /**
     * Get Upcoming
     *
     * Get a list of upcoming movies in theatres. This is a release type query that looks for all movies that have a release type of 2 or 3 within the specified date range.  You can optionally specify a &#x60;region&#x60; prameter which will narrow the search to only look for theatrical release dates within the specified country.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETMovieUpcomingTest() throws Exception {
        InlineResponse20063 response = api.gETMovieUpcoming();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the details of a network.  #### Recent Changes  | **Date** | **Change** | | - | - | | November 14, 2020 | The &#x60;logo_path&#x60; has been added to the default response. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETNetworkNetworkIdTest() throws Exception {
        Integer networkId = null;
        InlineResponse20080 response = api.gETNetworkNetworkId(networkId);

        // TODO: test validations
    }
    
    /**
     * Get Alternative Names
     *
     * Get the alternative names of a network.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETNetworkNetworkIdAlternativeNamesTest() throws Exception {
        Integer networkId = null;
        InlineResponse20058 response = api.gETNetworkNetworkIdAlternativeNames(networkId);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the TV network logos by id.  There are two image formats that are supported for networks, PNG&#39;s and SVG&#39;s. You can see which type the original file is by looking at the &#x60;file_type&#x60; field. We prefer SVG&#39;s as they are resolution independent and as such, the width and height are only there to reflect the original asset that was uploaded. An SVG can be scaled properly beyond those dimensions if you call them as a PNG.  For more information about how SVG&#39;s and PNG&#39;s can be used, take a read through [this document](#docTextSection:mXP9B2uzoDJFguDZv).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETNetworkNetworkIdImagesTest() throws Exception {
        Integer networkId = null;
        InlineResponse20023 response = api.gETNetworkNetworkIdImages(networkId);

        // TODO: test validations
    }
    
    /**
     * Get Person Change List
     *
     * Get a list of all of the person ids that have been changed in the past 24 hours.  You can query it for up to 14 days worth of changed IDs at a time with the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters. 100 items are returned per page.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonChangesTest() throws Exception {
        InlineResponse20039 response = api.gETPersonChanges();

        // TODO: test validations
    }
    
    /**
     * Get Latest
     *
     * Get the most newly created person. This is a live response and will continuously change.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonLatestTest() throws Exception {
        InlineResponse20070 response = api.gETPersonLatest();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the primary person details by id.  Supports &#x60;append_to_response&#x60;. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).  #### Recent Changes  | **Date** | **Change** | | - | - | | July 17, 2018 | Added the &#x60;known_for_department&#x60; field. | | April 26, 2018 | Added the [translations](#endpoint:CSaMjCxXAtGpxNGfS) method. | | November 9, 2016 | Biographies are now translatable on TMDB. This means you can query person details with a language parameter. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdTest() throws Exception {
        Integer personId = null;
        InlineResponse20028 response = api.gETPersonPersonId(personId);

        // TODO: test validations
    }
    
    /**
     * Get Changes
     *
     * Get the changes for a person. By default only the last 24 hours are returned.  You can query up to 14 days in a single query by using the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdChangesTest() throws Exception {
        Integer personId = null;
        InlineResponse2003 response = api.gETPersonPersonIdChanges(personId);

        // TODO: test validations
    }
    
    /**
     * Get Combined Credits
     *
     * Get the movie and TV credits together in a single response.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdCombinedCreditsTest() throws Exception {
        Integer personId = null;
        InlineResponse20014 response = api.gETPersonPersonIdCombinedCredits(personId);

        // TODO: test validations
    }
    
    /**
     * Get External IDs
     *
     * Get the external ids for a person. We currently support the following external sources.  | **External Sources** | | ------------     | | IMDB ID          | | Facebook         | | Freebase MID     | | Freebase ID      | | Instagram        | | TVRage ID        | | Twitter          |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdExternalIdsTest() throws Exception {
        Integer personId = null;
        InlineResponse20089 response = api.gETPersonPersonIdExternalIds(personId);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images for a person.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdImagesTest() throws Exception {
        Integer personId = null;
        InlineResponse20086 response = api.gETPersonPersonIdImages(personId);

        // TODO: test validations
    }
    
    /**
     * Get Movie Credits
     *
     * Get the movie credits for a person.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdMovieCreditsTest() throws Exception {
        Integer personId = null;
        InlineResponse20027 response = api.gETPersonPersonIdMovieCredits(personId);

        // TODO: test validations
    }
    
    /**
     * Get Tagged Images
     *
     * Get the images that this person has been tagged in.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdTaggedImagesTest() throws Exception {
        Integer personId = null;
        InlineResponse20051 response = api.gETPersonPersonIdTaggedImages(personId);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get a list of translations that have been created for a person.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdTranslationsTest() throws Exception {
        Integer personId = null;
        InlineResponse20067 response = api.gETPersonPersonIdTranslations(personId);

        // TODO: test validations
    }
    
    /**
     * Get TV Credits
     *
     * Get the TV show credits for a person.  You can query for some extra details about the credit with the [credit method](#endpoint:xPWdEBLkvCNZSicLN).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPersonIdTvCreditsTest() throws Exception {
        Integer personId = null;
        InlineResponse20064 response = api.gETPersonPersonIdTvCredits(personId);

        // TODO: test validations
    }
    
    /**
     * Get Popular
     *
     * Get the list of popular people on TMDB. This list updates daily.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETPersonPopularTest() throws Exception {
        InlineResponse20010 response = api.gETPersonPopular();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Retrieve the details of a movie or TV show review.  #### Recent Changes  | **Date** | **Change** | | - | - | | November 14, 2020 | A &#x60;author_details&#x60; field has been added to the default response, which includes an &#x60;avatar_path&#x60; and &#x60;rating&#x60; value. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETReviewReviewIdTest() throws Exception {
        String reviewId = null;
        InlineResponse20021 response = api.gETReviewReviewId(reviewId);

        // TODO: test validations
    }
    
    /**
     * Search Collections
     *
     * Search for collections.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchCollectionTest() throws Exception {
        InlineResponse20047 response = api.gETSearchCollection();

        // TODO: test validations
    }
    
    /**
     * Search Companies
     *
     * Search for companies.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchCompanyTest() throws Exception {
        InlineResponse2009 response = api.gETSearchCompany();

        // TODO: test validations
    }
    
    /**
     * Search Keywords
     *
     * Search for keywords.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchKeywordTest() throws Exception {
        InlineResponse2009 response = api.gETSearchKeyword();

        // TODO: test validations
    }
    
    /**
     * Search Movies
     *
     * Search for movies.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchMovieTest() throws Exception {
        Integer year = null;
        Integer primaryReleaseYear = null;
        InlineResponse200 response = api.gETSearchMovie(year, primaryReleaseYear);

        // TODO: test validations
    }
    
    /**
     * Multi Search
     *
     * Search multiple models in a single request. Multi search currently supports searching for movies, tv shows and people in a single request.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchMultiTest() throws Exception {
        InlineResponse20037 response = api.gETSearchMulti();

        // TODO: test validations
    }
    
    /**
     * Search People
     *
     * Search for people.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchPersonTest() throws Exception {
        InlineResponse20029 response = api.gETSearchPerson();

        // TODO: test validations
    }
    
    /**
     * Search TV Shows
     *
     * Search for a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETSearchTvTest() throws Exception {
        Integer firstAirDateYear = null;
        InlineResponse20030 response = api.gETSearchTv(firstAirDateYear);

        // TODO: test validations
    }
    
    /**
     * Get TV Airing Today
     *
     * Get a list of TV shows that are airing today. This query is purely day based as we do not currently support airing times.  You can specify a [timezone](endpoint:KQ4CDdEoWKJYLkrhS) to offset the day calculation. Without a specified timezone, this query defaults to EST (Eastern Time UTC-05:00).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvAiringTodayTest() throws Exception {
        InlineResponse20030 response = api.gETTvAiringToday();

        // TODO: test validations
    }
    
    /**
     * Get TV Change List
     *
     * Get a list of all of the TV show ids that have been changed in the past 24 hours.  You can query it for up to 14 days worth of changed IDs at a time with the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters. 100 items are returned per page.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvChangesTest() throws Exception {
        InlineResponse20039 response = api.gETTvChanges();

        // TODO: test validations
    }
    
    /**
     * Get Changes
     *
     * Get the changes for a TV episode. By default only the last 24 hours are returned.  You can query up to 14 days in a single query by using the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvEpisodeEpisodeIdChangesTest() throws Exception {
        Integer episodeId = null;
        InlineResponse20085 response = api.gETTvEpisodeEpisodeIdChanges(episodeId);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the details of a TV episode group. Groups support 7 different types which are enumerated as the following:  1. Original air date 2. Absolute 3. DVD 4. Digital 5. Story arc 6. Production 7. TV
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvEpisodeGroupIdTest() throws Exception {
        String id = null;
        InlineResponse20052 response = api.gETTvEpisodeGroupId(id);

        // TODO: test validations
    }
    
    /**
     * Get Latest
     *
     * Get the most newly created TV show. This is a live response and will continuously change.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvLatestTest() throws Exception {
        InlineResponse20059 response = api.gETTvLatest();

        // TODO: test validations
    }
    
    /**
     * Get TV On The Air
     *
     * Get a list of shows that are currently on the air.  This query looks for any TV show that has an episode with an air date in the next 7 days.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvOnTheAirTest() throws Exception {
        InlineResponse20030 response = api.gETTvOnTheAir();

        // TODO: test validations
    }
    
    /**
     * Get Popular
     *
     * Get a list of the current popular TV shows on TMDB. This list updates daily.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvPopularTest() throws Exception {
        InlineResponse20030 response = api.gETTvPopular();

        // TODO: test validations
    }
    
    /**
     * Get  Changes
     *
     * Get the changes for a TV season. By default only the last 24 hours are returned.  You can query up to 14 days in a single query by using the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvSeasonSeasonIdChangesTest() throws Exception {
        Integer seasonId = null;
        InlineResponse20069 response = api.gETTvSeasonSeasonIdChanges(seasonId);

        // TODO: test validations
    }
    
    /**
     * Get Top Rated
     *
     * Get a list of the top rated TV shows on TMDB.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTopRatedTest() throws Exception {
        InlineResponse20030 response = api.gETTvTopRated();

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the primary TV show details by id.  Supports &#x60;append_to_response&#x60;. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).  #### Recent Changes  | **Date** | **Change** | | - | - | | November 20, 2020 | A &#x60;watch/providers&#x60; method has been added to show what providers (eg. streaming) are available and where.| | November 14, 2020 | The &#x60;tagline&#x60; has been added to the default response, and is also available as part of the translations method. | | July 17, 2018 | We now return &#x60;last_episode_to_air&#x60; and &#x60;next_episode_to_air&#x60; fields. | | March 12, 2018 | Networks return proper logos and we introduced SVG support. | | March 8, 2018 | The &#x60;seasons&#x60; field now returns the translated names and overviews. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdTest() throws Exception {
        Integer tvId = null;
        InlineResponse20061 response = api.gETTvTvId(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Account States
     *
     * Grab the following account states for a session:  - TV show rating - If it belongs to your watchlist - If it belongs to your favourite list
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdAccountStatesTest() throws Exception {
        Integer tvId = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse20048 response = api.gETTvTvIdAccountStates(tvId, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Alternative Titles
     *
     * Returns all of the alternative titles for a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdAlternativeTitlesTest() throws Exception {
        Integer tvId = null;
        InlineResponse20066 response = api.gETTvTvIdAlternativeTitles(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Changes
     *
     * Get the changes for a TV show. By default only the last 24 hours are returned.  You can query up to 14 days in a single query by using the &#x60;start_date&#x60; and &#x60;end_date&#x60; query parameters.  TV show changes are different than movie changes in that there are some edits on seasons and episodes that will create a change entry at the show level. These can be found under the season and episode keys. These keys will contain a &#x60;series_id&#x60; and &#x60;episode_id&#x60;. You can use the [season changes](#endpoint:ZqhtyQbJ4YXz8RSya) and [episode changes](#endpoint:FpqrhBzgf2RJv4bHC) methods to look these up individually.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdChangesTest() throws Exception {
        Integer tvId = null;
        InlineResponse20033 response = api.gETTvTvIdChanges(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Content Ratings
     *
     * Get the list of content ratings (certifications) that have been added to a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdContentRatingsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20019 response = api.gETTvTvIdContentRatings(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Episode Groups
     *
     * Get all of the episode groups that have been created for a TV show. With a group ID you can call the [get TV episode group details](#endpoint:yCouThc88qs7DGHY5) method.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdEpisodeGroupsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20046 response = api.gETTvTvIdEpisodeGroups(tvId);

        // TODO: test validations
    }
    
    /**
     * Get External IDs
     *
     * Get the external ids for a TV show. We currently support the following external sources.  | **Media Databases** | **Social IDs** | | ------------------- | -------------- | | IMDb ID             | Facebook       | | TVDB ID             | Instagram      | | Freebase MID*       | Twitter        | | Freebase ID*        |                | | TVRage ID*          |                |  *Defunct or no longer available as a service.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdExternalIdsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20012 response = api.gETTvTvIdExternalIds(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images that belong to a TV show.  Querying images with a &#x60;language&#x60; parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the &#x60;include_image_language&#x60; parameter. This should be a comma seperated value like so: &#x60;include_image_language&#x3D;en,null&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdImagesTest() throws Exception {
        Integer tvId = null;
        InlineResponse20024 response = api.gETTvTvIdImages(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Keywords
     *
     * Get the keywords that have been added to a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdKeywordsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20079 response = api.gETTvTvIdKeywords(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Recommendations
     *
     * Get the list of TV show recommendations for this item.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdRecommendationsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20011 response = api.gETTvTvIdRecommendations(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Reviews
     *
     * Get the reviews for a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdReviewsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20082 response = api.gETTvTvIdReviews(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Screened Theatrically
     *
     * Get a list of seasons or episodes that have been screened in a film festival or theatre.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdScreenedTheatricallyTest() throws Exception {
        Integer tvId = null;
        InlineResponse20083 response = api.gETTvTvIdScreenedTheatrically(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Account States
     *
     * Returns all of the user ratings for the season&#39;s episodes.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberAccountStatesTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse20055 response = api.gETTvTvIdSeasonSeasonNumberAccountStates(tvId, seasonNumber, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get Credits
     *
     * Get the credits for TV season.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberCreditsTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        InlineResponse20034 response = api.gETTvTvIdSeasonSeasonNumberCredits(tvId, seasonNumber);

        // TODO: test validations
    }
    
    /**
     * Get Details
     *
     * Get the TV episode details by id.  Supports &#x60;append_to_response&#x60;. Read more about this [here](#docTextSection:JdZq8ctmcxNqyLQjp).  #### Recent Changes  | **Date** | **Change** | | - | - | | June 1, 2018 | Added the [translations](#endpoint:5SFwZar3LkP99QMp7) method. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        InlineResponse20017 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumber(tvId, seasonNumber, episodeNumber);

        // TODO: test validations
    }
    
    /**
     * Get Account States
     *
     * Get your rating for a episode.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberAccountStatesTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse20012 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberAccountStates(tvId, seasonNumber, episodeNumber, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Get External IDs
     *
     * Get the external ids for a TV episode. We currently support the following external sources.  | **External Sources** | | -------------------- | | IMDb ID              | | TVDB ID              | | Freebase MID*        | | Freebase ID*         | | TVRage ID*           |  *Defunct or no longer available as a service.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberExternalIdsTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        InlineResponse20012 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberExternalIds(tvId, seasonNumber, episodeNumber);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images that belong to a TV episode.  Querying images with a &#x60;language&#x60; parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the &#x60;include_image_language&#x60; parameter. This should be a comma seperated value like so: &#x60;include_image_language&#x3D;en,null&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberImagesTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        InlineResponse20041 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberImages(tvId, seasonNumber, episodeNumber);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get the translation data for an episode.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberTranslationsTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        InlineResponse20035 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberTranslations(tvId, seasonNumber, episodeNumber);

        // TODO: test validations
    }
    
    /**
     * Get  Videos
     *
     * Get the videos that have been added to a TV episode.  #### Recent Changes  | **Date** | **Change** | | - | - | | July 28, 2021 | A new &#x60;include_video_language&#x60; filter is now available. You can use this filter the same way you use &#x60;include_image_language&#x60; on image calls. We also added two new fields, &#x60;official&#x60; and &#x60;published_at&#x60; to the video response. | | March 23, 2019 | Vimeo was added as a video source. | | March 20, 2019 | \&quot;Behind the Scenes\&quot;, \&quot;Bloopers\&quot; and \&quot;Recap\&quot; were added as valid video types. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberVideosTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        InlineResponse20016 response = api.gETTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberVideos(tvId, seasonNumber, episodeNumber);

        // TODO: test validations
    }
    
    /**
     * Get External IDs
     *
     * Get the external ids for a TV season. We currently support the following external sources.  | **Media Databases** | | ------------------- | | TVDB ID             | | Freebase MID*       | | Freebase ID*        | | TVRage ID*          |  *Defunct or no longer available as a service.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberExternalIdsTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        InlineResponse20012 response = api.gETTvTvIdSeasonSeasonNumberExternalIds(tvId, seasonNumber);

        // TODO: test validations
    }
    
    /**
     * Get Images
     *
     * Get the images that belong to a TV season.  Querying images with a &#x60;language&#x60; parameter will filter the results. If you want to include a fallback language (especially useful for backdrops) you can use the &#x60;include_image_language&#x60; parameter. This should be a comma seperated value like so: &#x60;include_image_language&#x3D;en,null&#x60;.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberImagesTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        InlineResponse20060 response = api.gETTvTvIdSeasonSeasonNumberImages(tvId, seasonNumber);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get the credits for TV season.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberTranslationsTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        InlineResponse20035 response = api.gETTvTvIdSeasonSeasonNumberTranslations(tvId, seasonNumber);

        // TODO: test validations
    }
    
    /**
     * Get Videos
     *
     * Get the videos that have been added to a TV season.  #### Recent Changes  | **Date** | **Change** | | - | - | | July 28, 2021 | A new &#x60;include_video_language&#x60; filter is now available. You can use this filter the same way you use &#x60;include_image_language&#x60; on image calls. We also added two new fields, &#x60;official&#x60; and &#x60;published_at&#x60; to the video response. | | March 23, 2019 | Vimeo was added as a video source. | | March 20, 2019 | \&quot;Behind the Scenes\&quot; and \&quot;Bloopers\&quot; and \&quot;Recap\&quot; were added as valid video types. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSeasonSeasonNumberVideosTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        InlineResponse20022 response = api.gETTvTvIdSeasonSeasonNumberVideos(tvId, seasonNumber);

        // TODO: test validations
    }
    
    /**
     * Get Similar TV Shows
     *
     * Get a list of similar TV shows. These items are assembled by looking at keywords and genres.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdSimilarTest() throws Exception {
        Integer tvId = null;
        InlineResponse20011 response = api.gETTvTvIdSimilar(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Translations
     *
     * Get a list of the translations that exist for a TV show.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdTranslationsTest() throws Exception {
        Integer tvId = null;
        InlineResponse20020 response = api.gETTvTvIdTranslations(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Videos
     *
     * Get the videos that have been added to a TV show.  #### Recent Changes  | **Date** | **Change** | | - | - | | July 28, 2021 | A new &#x60;include_video_language&#x60; filter is now available. You can use this filter the same way you use &#x60;include_image_language&#x60; on image calls. We also added two new fields, &#x60;official&#x60; and &#x60;published_at&#x60; to the video response. | | March 23, 2019 | Vimeo was added as a video source. | | March 20, 2019 | \&quot;Behind the Scenes\&quot; and \&quot;Bloopers\&quot; were added as valid video types. |
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdVideosTest() throws Exception {
        Integer tvId = null;
        InlineResponse20022 response = api.gETTvTvIdVideos(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Watch Providers
     *
     * Powered by our partnership with JustWatch, you can query this method to get a list of the availabilities per country by provider.  This is **not** going to return full deep links, but rather, it&#39;s just enough information to display what&#39;s available where.  You can link to the provided TMDB URL to help support TMDB and provide the actual deep links to the content.  **Please note**: In order to use this data **you must** attribute the source of the data as JustWatch. If we find any usage not complying with these terms we will revoke access to the API.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETTvTvIdWatchProvidersTest() throws Exception {
        Integer tvId = null;
        InlineResponse2001 response = api.gETTvTvIdWatchProviders(tvId);

        // TODO: test validations
    }
    
    /**
     * Get Movie Providers
     *
     * Returns a list of the watch provider (OTT/streaming) data we have available for movies. You can specify a &#x60;watch_region&#x60; param if you want to further filter the list by country.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETWatchProvidersMovieTest() throws Exception {
        String watchRegion = null;
        InlineResponse2006 response = api.gETWatchProvidersMovie(watchRegion);

        // TODO: test validations
    }
    
    /**
     * Get Available Regions
     *
     * Returns a list of all of the countries we have watch provider (OTT/streaming) data for.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETWatchProvidersRegionsTest() throws Exception {
        InlineResponse20073 response = api.gETWatchProvidersRegions();

        // TODO: test validations
    }
    
    /**
     * Get TV Providers
     *
     * Returns a list of the watch provider (OTT/streaming) data we have available for TV series. You can specify a &#x60;watch_region&#x60; param if you want to further filter the list by country.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void gETWatchProvidersTvTest() throws Exception {
        String watchRegion = null;
        InlineResponse2006 response = api.gETWatchProvidersTv(watchRegion);

        // TODO: test validations
    }
    
    /**
     * Mark as Favorite
     *
     * This method allows you to mark a movie or TV show as a favorite item.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTAccountAccountIdFavoriteTest() throws Exception {
        Integer accountId = null;
        String sessionId = null;
        String contentType = null;
        Body10 body = null;
        InlineResponse4011 response = api.pOSTAccountAccountIdFavorite(accountId, sessionId, contentType, body);

        // TODO: test validations
    }
    
    /**
     * Add to Watchlist
     *
     * Add a movie or TV show to your watchlist.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTAccountAccountIdWatchlistTest() throws Exception {
        Integer accountId = null;
        String contentType = null;
        String sessionId = null;
        Body11 body = null;
        InlineResponse4011 response = api.pOSTAccountAccountIdWatchlist(accountId, contentType, sessionId, body);

        // TODO: test validations
    }
    
    /**
     * Create Session (from v4 access token)
     *
     * Use this method to create a v3 session ID if you already have a valid v4 access token. The v4 token needs to be authenticated by the user. Your standard \&quot;read token\&quot; will not validate to create a session ID.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTAuthenticationSessionConvert4Test() throws Exception {
        Body body = null;
        InlineResponse2005 response = api.pOSTAuthenticationSessionConvert4(body);

        // TODO: test validations
    }
    
    /**
     * Create Session
     *
     * You can use this method to create a fully valid session ID once a user has validated the request token. More information about how this works can be found [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTAuthenticationSessionNewTest() throws Exception {
        Body8 body = null;
        InlineResponse2005 response = api.pOSTAuthenticationSessionNew(body);

        // TODO: test validations
    }
    
    /**
     * Create Session With Login
     *
     * This method allows an application to validate a request token by entering a username and password.  Not all applications have access to a web view so this can be used as a substitute.  Please note, the preferred method of validating a request token is to have a user authenticate the request via the TMDB website. You can read about that method [here](#docTextSection:NSZtgz7zptsiLYxXZ).  If you decide to use this method please **use HTTPS**.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTAuthenticationTokenValidateWithLoginTest() throws Exception {
        Body3 body = null;
        InlineResponse20025 response = api.pOSTAuthenticationTokenValidateWithLogin(body);

        // TODO: test validations
    }
    
    /**
     * Create List
     *
     * Create a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTListTest() throws Exception {
        String contentType = null;
        String sessionId = null;
        Body2 body = null;
        InlineResponse201 response = api.pOSTList(contentType, sessionId, body);

        // TODO: test validations
    }
    
    /**
     * Add Movie
     *
     * Add a movie to a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTListListIdAddItemTest() throws Exception {
        String listId = null;
        String contentType = null;
        String sessionId = null;
        Body6 body = null;
        InlineResponse4011 response = api.pOSTListListIdAddItem(listId, contentType, sessionId, body);

        // TODO: test validations
    }
    
    /**
     * Clear List
     *
     * Clear all of the items from a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTListListIdClearTest() throws Exception {
        String listId = null;
        Boolean confirm = null;
        String sessionId = null;
        InlineResponse4011 response = api.pOSTListListIdClear(listId, confirm, sessionId);

        // TODO: test validations
    }
    
    /**
     * Remove Movie
     *
     * Remove a movie from a list.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTListListIdRemoveItemTest() throws Exception {
        String listId = null;
        String contentType = null;
        String sessionId = null;
        Body9 body = null;
        InlineResponse4011 response = api.pOSTListListIdRemoveItem(listId, contentType, sessionId, body);

        // TODO: test validations
    }
    
    /**
     * Rate Movie
     *
     * Rate a movie.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTMovieMovieIdRatingTest() throws Exception {
        Integer movieId = null;
        String contentType = null;
        Body7 body = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.pOSTMovieMovieIdRating(movieId, contentType, body, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Rate TV Show
     *
     * Rate a TV show.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTTvTvIdRatingTest() throws Exception {
        Integer tvId = null;
        String contentType = null;
        Body1 body = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.pOSTTvTvIdRating(tvId, contentType, body, guestSessionId, sessionId);

        // TODO: test validations
    }
    
    /**
     * Rate TV Episode
     *
     * Rate a TV episode.  A valid session or guest session ID is required. You can read more about how this works [here](#docTextSection:NSZtgz7zptsiLYxXZ).
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pOSTTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberRatingTest() throws Exception {
        Integer tvId = null;
        Integer seasonNumber = null;
        Integer episodeNumber = null;
        String contentType = null;
        Body4 body = null;
        String guestSessionId = null;
        String sessionId = null;
        InlineResponse4011 response = api.pOSTTvTvIdSeasonSeasonNumberEpisodeEpisodeNumberRating(tvId, seasonNumber, episodeNumber, contentType, body, guestSessionId, sessionId);

        // TODO: test validations
    }
    
}
